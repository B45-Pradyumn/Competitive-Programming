/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {
    int count = 0;
    int maxCount = 0;
    List<Integer> list = new ArrayList();
    TreeNode prev;
    public int[] findMode(TreeNode root) {
        prev = root;
        inorder(root);
        int[] result = new int[list.size()];
        int i = 0;
        for(int n: list)
            result[i++]=n;
        return result;
    }
    private void inorder(TreeNode node){
        if (node == null)
            return;
        inorder(node.left);
        if (prev.val == node.val)
            count++;
        else
            count = 1;
        if (count > maxCount){
            list.clear();
            list.add(node.val);
            maxCount = count;
        }else if (count == maxCount)
            list.add(node.val);
        prev = node;
        inorder(node.right);
    }
}
